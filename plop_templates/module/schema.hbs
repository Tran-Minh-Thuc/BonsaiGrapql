import { gql } from "apollo-server"
import { BaseDocument } from "../../base/baseModel"

declare global {
    type {{properCase name}} = BaseDocument & {
        _id?: string,
        //testId?: string,
        name?: string,
    }
}

export default gql`
    # TYPE
    type {{properCase name}} {
        _id: ID
        name: String

        createdAt: Float
        updatedAt: Float
    }

        type Result{{properCase name}} {
        code: String
        status: String
        mesage: String
        data: {{properCase name}}
    }

    #ROOT TYPE
    type Query {
        getAll{{properCase name}}(q: QueryInput): {{properCase name}}PageData
        getOne{{properCase name}}(_id: ID!): Result{{properCase name}}
    }

    type {{properCase name}}PageData {
        data: [{{properCase name}}]
        pagination: Pagination
    }

    type Mutation {
        create{{properCase name}}(data: Create{{properCase name}}Input): Result{{properCase name}}
        update{{properCase name}}(_id: ID!, data: Update{{properCase name}}Input): Result{{properCase name}}
        delete{{properCase name}}(_id: ID!): Result{{properCase name}}
    }

    # INPUT
    input Create{{properCase name}}Input {
        name: String!
    }

    input Update{{properCase name}}Input {
        name: String
    }
`